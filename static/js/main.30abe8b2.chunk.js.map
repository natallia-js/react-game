{"version":3,"sources":["logo.svg","components/GameChoiceBtn/index.jsx","components/OneUserGameArea/index.jsx","assets/sounds/win.mp3","assets/sounds/draw.mp3","assets/sounds/lose.mp3","additional/localStor.js","components/Game/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["BtnKinds","Object","freeze","rock","scissors","paper","GameChoiceBtn","props","btnKind","isBlocked","btnClicked","selected","lose","acceptKeyboardEvents","btnRef","useRef","useEffect","onKeyPress","event","key","current","click","window","addEventListener","removeEventListener","className","ref","str","getBtnClassNames","onClick","OneUserGameArea","userCanMakeChoice","setUserChoice","userChoice","playsComputer","startMakingComputerChoice","choiceLose","btnsAreaRef","checkIfUserCanClick","stopPropagation","userMadeChoice","choice","max","Math","floor","random","LOCAL_STORAGE_NAME","saveInLocalStorage","obj","localStorageData","JSON","parse","localStorage","getItem","setItem","stringify","getFromLocalStorage","classNames","require","MAX_ROUNDS_PER_GAME","Game","useState","data","hasOwnProperty","started","fromLocStor","SetStarted","roundOver","SetRoundOver","firstPlayerScore","SetFirstPlayerScore","secondPlayerScore","SetSecondPlayerScore","firstPlayerTurn","SetFirstPlayerTurn","firstUserChoice","SetFirstUserChoice","secondUserChoice","SetSecondUserChoice","setStartMakingComputerChoice","useSounds","SetUseSounds","soundVolume","SetSoundVolume","last10GameResults","SetLast10GameResults","currRound","SetCurrRound","lostPlayer","SetLostPlayer","useSound","winGameSound","volume","playWinGameSound","drawGameSound","playDrawGameSound","loseGameSound","playLoseGameSound","newGameBtnRef","continueBtnRef","length","newArr","shift","value","disabled","id","type","min","step","onChange","target","valueAsNumber","join","App","isFullScreen","SetIsFullScreen","document","fullscreenElement","src","logo","alt","exitFullscreen","webkitExitFullscreen","msExitFullscreen","html","documentElement","element","requestFullscreen","webkitrequestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","mozRequestFullScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30abe8b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useRef } from 'react';\n\nimport './styles.css';\nimport '../Game/animate.min.css';\n\n\nexport const BtnKinds = Object.freeze({\n  rock: 0,\n  scissors: 1,\n  paper: 2,\n});\n\n\nexport const GameChoiceBtn = (props) => {\n  const {\n    btnKind,    // вид игровой кнопки (камень / ножницы / бумага)\n    isBlocked,  // можно / нельзя нажимать на кнопку\n    btnClicked, // callback, срабатывающий при нажатии на кнопку (без параметров)\n    selected,   // true (выбрана пользователем) / false (не выбрана пользователем)\n    lose,       // true (проигравший выбор пользователя) / false (выбор - еще - не проиграл)\n    acceptKeyboardEvents,\n  } = props;\n\n  const btnRef = useRef();\n\n\n  const getBtnClassNames = () => {\n    let str = 'game-choice-btn';\n    if (!isBlocked) {\n      str += ' blink';\n    }\n    if (selected) {\n      if (!lose) {\n        str += ' selected-btn';\n      } else {\n        str += ' lose-btn';\n      }\n    }\n    switch (btnKind) {\n      case BtnKinds.rock:\n        str += ' rock-btn';\n        break;\n      case BtnKinds.scissors:\n        str += ' scissors-btn';\n        break;\n      case BtnKinds.paper:\n        str += ' paper-btn';\n        break;\n      default:\n        break;\n    }\n    return str;\n  }\n\n\n  const onBtnClick = () => {\n    if (!isBlocked) {\n      btnClicked();\n    }\n  };\n\n\n  useEffect(() => {\n    const onKeyPress = (event) => {\n      if (((btnKind === BtnKinds.rock) && (event.key === 'r')) ||\n          ((btnKind === BtnKinds.scissors) && (event.key === \"s\")) ||\n          ((btnKind === BtnKinds.paper) && (event.key === \"p\"))) {\n        btnRef.current.click();\n      }\n    };\n\n    if (acceptKeyboardEvents) {\n      window.addEventListener('keydown', onKeyPress);\n    }\n\n    return () => {\n      if (acceptKeyboardEvents) {\n        window.removeEventListener('keydown', onKeyPress);\n      }\n    };\n  }, []);\n\n\n  return (\n    <div className={selected ? 'animate__animated animate__flip' : ''}>\n      <button ref={btnRef}\n        className={getBtnClassNames()}\n        onClick={onBtnClick}\n      >\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { BtnKinds, GameChoiceBtn } from '../GameChoiceBtn';\n\nimport './styles.css';\n\n\nexport const OneUserGameArea = (props) => {\n  const {\n    userCanMakeChoice,\n    setUserChoice,\n    userChoice,\n    playsComputer,\n    startMakingComputerChoice,\n    choiceLose,\n    acceptKeyboardEvents,\n  } = props;\n\n  const btnsAreaRef = useRef();\n\n\n  useEffect(() => {\n    const checkIfUserCanClick = (event) => {\n      // Не даем пользователю нажимать на кнопки, если в этой области играет комп\n      if (playsComputer) {\n        event.stopPropagation();\n      }\n    }\n\n    btnsAreaRef.current.addEventListener('click', checkIfUserCanClick);\n\n    return () => {\n      if (btnsAreaRef.current) {\n        btnsAreaRef.current.removeEventListener('click', checkIfUserCanClick);\n      }\n    }\n  }, []);\n\n\n  const userMadeChoice = (choice) => {\n    setUserChoice(choice);\n  };\n\n\n  useEffect(() => {\n    if (!startMakingComputerChoice) {\n      return;\n    }\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    userMadeChoice(getRandomInt(3));\n\n}, [startMakingComputerChoice]);\n\n\n  return (\n    <div className=\"btns-area\" ref={btnsAreaRef}>\n      <div className=\"top-block\">\n        <GameChoiceBtn\n          btnKind={BtnKinds.rock}\n          isBlocked={!userCanMakeChoice}\n          btnClicked={() => userMadeChoice(BtnKinds.rock)}\n          selected={userChoice === BtnKinds.rock}\n          lose={(userChoice === BtnKinds.rock) && choiceLose}\n          acceptKeyboardEvents={acceptKeyboardEvents}\n        />\n        <GameChoiceBtn\n          btnKind={BtnKinds.scissors}\n          isBlocked={!userCanMakeChoice}\n          btnClicked={() => userMadeChoice(BtnKinds.scissors)}\n          selected={userChoice === BtnKinds.scissors}\n          lose={(userChoice === BtnKinds.scissors) && choiceLose}\n          acceptKeyboardEvents={acceptKeyboardEvents}\n        />\n      </div>\n      <div className=\"bottom-block\">\n        <GameChoiceBtn\n          btnKind={BtnKinds.paper}\n          isBlocked={!userCanMakeChoice}\n          btnClicked={() => userMadeChoice(BtnKinds.paper)}\n          selected={userChoice === BtnKinds.paper}\n          lose={(userChoice === BtnKinds.paper) && choiceLose}\n          acceptKeyboardEvents={acceptKeyboardEvents}\n        />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/win.7b4475ee.mp3\";","export default __webpack_public_path__ + \"static/media/draw.0f5186fc.mp3\";","export default __webpack_public_path__ + \"static/media/lose.d77a572c.mp3\";","const LOCAL_STORAGE_NAME = 'My_RSP_Game';\n\n\nexport function saveInLocalStorage(obj) {\n  if (!obj) {\n    return;\n  }\n  const localStorageData = JSON.parse(localStorage.getItem(LOCAL_STORAGE_NAME));\n  localStorage.setItem(LOCAL_STORAGE_NAME, JSON.stringify({\n    ...localStorageData,\n    ...obj,\n  }));\n}\n\n\nexport function getFromLocalStorage() {\n  return JSON.parse(localStorage.getItem(LOCAL_STORAGE_NAME));\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { OneUserGameArea } from '../OneUserGameArea';\nimport { BtnKinds } from '../GameChoiceBtn';\nimport useSound from 'use-sound';\n\nimport winGameSound from '../../assets/sounds/win.mp3';\nimport drawGameSound from '../../assets/sounds/draw.mp3';\nimport loseGameSound from '../../assets/sounds/lose.mp3';\n\nimport './styles.css';\nimport './animate.min.css';\n\nimport { saveInLocalStorage, getFromLocalStorage } from '../../additional/localStor';\n\n\nconst classNames = require('classnames');\n\nconst MAX_ROUNDS_PER_GAME = 10;\nconst MAX_GAMES_LOG = 10;\n\n\nexport const Game = () => {\n  const [started, SetStarted] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('started')) {\n      return { data: data.started, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ started: false });\n      return { data: false, fromLocStor: false };\n    }\n  });\n  const [roundOver, SetRoundOver] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('roundOver')) {\n      return { data: data.roundOver, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ roundOver: true });\n      return { data: true, fromLocStor: false };\n    }\n  });\n  const [firstPlayerScore, SetFirstPlayerScore] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('firstPlayerScore')) {\n      return { data: data.firstPlayerScore, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ firstPlayerScore: 0 });\n      return { data: 0, fromLocStor: false };\n    }\n  });\n  const [secondPlayerScore, SetSecondPlayerScore] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('secondPlayerScore')) {\n      return { data: data.secondPlayerScore, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ secondPlayerScore: 0 });\n      return { data: 0, fromLocStor: false };\n    }\n  });\n  const [firstPlayerTurn, SetFirstPlayerTurn] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('firstPlayerTurn')) {\n      return { data: data.firstPlayerTurn, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ firstPlayerTurn: true });\n      return { data: true, fromLocStor: false };\n    }\n  });\n  const [firstUserChoice, SetFirstUserChoice] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('firstUserChoice')) {\n      return { data: data.firstUserChoice, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ firstUserChoice: null });\n      return { data: null, fromLocStor: false };\n    }\n  });\n  const [secondUserChoice, SetSecondUserChoice] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('secondUserChoice')) {\n      return { data: data.secondUserChoice, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ secondUserChoice: null });\n      return { data: null, fromLocStor: false };\n    }\n  });\n  const [startMakingComputerChoice, setStartMakingComputerChoice] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('startMakingComputerChoice')) {\n      return { data: data.startMakingComputerChoice, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ startMakingComputerChoice: false });\n      return { data: false, fromLocStor: false };\n    }\n  });\n  const [useSounds, SetUseSounds] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('useSounds')) {\n      return { data: data.useSounds, fromLocStor: true };\n     } else {\n      saveInLocalStorage({ useSounds: true });\n      return { data: true, fromLocStor: false };\n     }\n  });\n  const [soundVolume, SetSoundVolume] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('soundVolume')) {\n      return { data: data.soundVolume, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ soundVolume: 1 });\n      return { data: 1, fromLocStor: false };\n    }\n  });\n  const [last10GameResults, SetLast10GameResults] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('last10GameResults')) {\n      return { data: data.last10GameResults, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ last10GameResults: [] });\n      return { data: [], fromLocStor: false};\n    }\n  });\n  const [currRound, SetCurrRound] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('currRound')) {\n      return { data: data.currRound, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ currRound: 1 });\n      return { data: 1, fromLocStor: false };\n    }\n  });\n  const [lostPlayer, SetLostPlayer] = useState(() => {\n    const data = getFromLocalStorage();\n    if (data && data.hasOwnProperty('lostPlayer')) {\n      return { data: data.lostPlayer, fromLocStor: true };\n    } else {\n      saveInLocalStorage({ lostPlayer: 0 });\n      return { data: 0, fromLocStor: false };\n    }\n  })\n\n  const [playWinGameSound] = useSound(winGameSound, { volume: soundVolume.data });\n  const [playDrawGameSound] = useSound(drawGameSound, { volume: soundVolume.data });\n  const [playLoseGameSound] = useSound(loseGameSound, { volume: soundVolume.data });\n\n  const newGameBtnRef = useRef();\n  const continueBtnRef = useRef();\n\n\n  function resetGame() {\n    SetStarted({ data: true, fromLocStor: false });\n    SetRoundOver({ data: false, fromLocStor: false });\n    SetFirstPlayerScore({ data: 0, fromLocStor: false });\n    SetSecondPlayerScore({ data: 0, fromLocStor: false });\n    SetFirstPlayerTurn({ data: true, fromLocStor: false });\n    SetFirstUserChoice({ data: null, fromLocStor: false });\n    SetSecondUserChoice({ data: null, fromLocStor: false });\n    SetCurrRound({ data: 1, fromLocStor: false });\n    SetLostPlayer({ data: 0, fromLocStor: false });\n  }\n\n\n  function continueGame() {\n    SetFirstUserChoice({ data: null, fromLocStor: false });\n    SetSecondUserChoice({ data: null, fromLocStor: false });\n    SetRoundOver({ data: false, fromLocStor: false });\n    SetFirstPlayerTurn({ data: true, fromLocStor: false });\n    SetCurrRound({ data: currRound.data + 1, fromLocStor: false });\n    SetLostPlayer({ data: 0, fromLocStor: false });\n  }\n\n\n  useEffect(() => {\n    function onKeyPress(event) {\n      if (event.key === 'n') {\n        newGameBtnRef.current.click();\n      } else if (event.key === 'c') {\n        continueBtnRef.current.click();\n      }\n    }\n\n    window.addEventListener('keydown', onKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyPress);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    if (firstUserChoice.fromLocStor) {\n      return;\n    }\n    saveInLocalStorage({ firstUserChoice: firstUserChoice.data });\n\n    // Если первый игрок сделал свой выбор,...\n    if (firstUserChoice.data !== null) {\n      // ...передаем очередь хода второму игроку\n      SetFirstPlayerTurn({ data: false, fromLocStor: false });\n    }\n  }, [firstUserChoice.data]);\n\n\n  useEffect(() => {\n    if (firstPlayerTurn.fromLocStor) {\n      return;\n    }\n    saveInLocalStorage({ firstPlayerTurn: firstPlayerTurn.data });\n\n    // Если очередь ходить второму игроку (а это комп), ...\n    if (firstPlayerTurn.data === false) {\n      // ...тогда делаем за него выбор\n      setStartMakingComputerChoice({ data: true, fromLocStor: false });\n    }\n  }, [firstPlayerTurn.data]);\n\n\n  useEffect(() => {\n    if (secondUserChoice.fromLocStor) {\n      return;\n    }\n    saveInLocalStorage({ secondUserChoice: secondUserChoice.data });\n\n    if (secondUserChoice.data !== null) {\n      // Определяем победителя раунда\n      const determineWinner = () => {\n        if (firstUserChoice.data === secondUserChoice.data) {\n          if (useSounds.data) {\n            playDrawGameSound();\n          }\n          return;\n        }\n        if (((firstUserChoice.data === BtnKinds.rock) && (secondUserChoice.data === BtnKinds.scissors)) ||\n            ((firstUserChoice.data === BtnKinds.scissors) && (secondUserChoice.data === BtnKinds.paper)) ||\n            ((firstUserChoice.data === BtnKinds.paper) && (secondUserChoice.data === BtnKinds.rock))) {\n          SetFirstPlayerScore({ data: firstPlayerScore.data + 1, fromLocStor: false });\n          SetLostPlayer({ data: 2, fromLocStor: false });\n          if (useSounds.data) {\n            playWinGameSound();\n          }\n        } else {\n          SetSecondPlayerScore({ data: secondPlayerScore.data + 1, fromLocStor: false });\n          SetLostPlayer({ data: 1, fromLocStor: false });\n          if (useSounds.data) {\n            playLoseGameSound();\n          }\n        }\n      };\n      determineWinner();\n\n      // Завершаем очередной раунд игры\n      SetRoundOver({ data: true, fromLocStor: false });\n      setStartMakingComputerChoice({ data: false, fromLocStor: false });\n    }\n  }, [secondUserChoice.data]);\n\n\n  useEffect(() => {\n    if (!started.fromLocStor) {\n      saveInLocalStorage({ started: started.data });\n    }\n  }, [started.data]);\n\n\n  useEffect(() => {\n    if (roundOver.fromLocStor) {\n      return;\n    }\n    saveInLocalStorage({ roundOver: roundOver.data });\n\n    if (roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME)) {\n      if (last10GameResults.data.length < MAX_GAMES_LOG) {\n        SetLast10GameResults({ data: [...last10GameResults.data, `{${firstPlayerScore.data}:${secondPlayerScore.data}}`], fromLocStor: false });\n      } else {\n        const newArr = last10GameResults.data;\n        newArr.shift();\n        SetLast10GameResults({ data: [...newArr, `{${firstPlayerScore.data}:${secondPlayerScore.data}}`], fromLocStor: false });\n      }\n      // завершаем игру\n      SetStarted({ data: false, fromLocStor: false });\n    }\n  }, [roundOver.data]);\n\n\n  useEffect(() => {\n    if (!firstPlayerScore.fromLocStor) {\n      saveInLocalStorage({ firstPlayerScore: firstPlayerScore.data });\n    }\n  }, [firstPlayerScore.data]);\n\n\n  useEffect(() => {\n    if (!secondPlayerScore.fromLocStor) {\n      saveInLocalStorage({ secondPlayerScore: secondPlayerScore.data });\n    }\n  }, [secondPlayerScore.data]);\n\n\n  useEffect(() => {\n    if (!startMakingComputerChoice.fromLocStor) {\n      saveInLocalStorage({ startMakingComputerChoice: startMakingComputerChoice.data });\n    }\n  }, [startMakingComputerChoice.data]);\n\n\n  useEffect(() => {\n    if (!useSounds.fromLocStor) {\n      saveInLocalStorage({ useSounds: useSounds.data });\n    }\n  }, [useSounds.data]);\n\n\n  useEffect(() => {\n    if (!soundVolume.fromLocStor) {\n      saveInLocalStorage({ soundVolume: soundVolume.data });\n    }\n  }, [soundVolume.data]);\n\n\n  useEffect(() => {\n    if (!last10GameResults.fromLocStor) {\n      saveInLocalStorage({ last10GameResults: last10GameResults.data });\n    }\n  }, [last10GameResults.data]);\n\n\n  useEffect(() => {\n    if (!currRound.fromLocStor) {\n      saveInLocalStorage({ currRound: currRound.data });\n    }\n  }, [currRound.data]);\n\n\n  useEffect(() => {\n    if (!lostPlayer.fromLocStor) {\n      saveInLocalStorage({ lostPlayer: lostPlayer.data });\n    }\n  }, [lostPlayer.data]);\n\n\n  return (\n    <div className='game-area'>\n      <div className={classNames('score-area', {\n          'win': roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) && (firstPlayerScore.data > secondPlayerScore.data),\n          'lose': roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) && (firstPlayerScore.data < secondPlayerScore.data),\n          'draw': roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) && (firstPlayerScore.data === secondPlayerScore.data),\n        })}\n      >\n        <div className=\"score-area-1-block\">\n          {firstPlayerScore.data}\n        </div>\n        <div className=\"score-area-2-block\">\n          <span className=\"curr-round\">Round {currRound.data} of {MAX_ROUNDS_PER_GAME}</span>\n          {roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) &&\n            <>\n              <br/>\n              <div className=\"animate__animated animate__bounceInLeft\">\n                Game over. {\n                  roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) && (firstPlayerScore.data === secondPlayerScore.data) ? 'Draw' :\n                  roundOver.data && (currRound.data === MAX_ROUNDS_PER_GAME) && (firstPlayerScore.data > secondPlayerScore.data) ? 'You win' : 'Computer wins'\n                }\n              </div>\n            </>\n          }\n        </div>\n        <div className=\"score-area-3-block\">\n          {secondPlayerScore.data}\n        </div>\n      </div>\n\n      <div className='choice-btns-area'>\n\n        <div>\n          <div className=\"propose-user-choice-block\">\n            {\n              started.data && firstPlayerTurn.data &&\n              <div className=\"animate__animated animate__flash\">\n                'Your choice (click image button or press english \"r\", \"s\" or \"p\" on keyboard):'\n              </div>\n            }\n          </div>\n          <OneUserGameArea\n            userCanMakeChoice={started.data && !roundOver.data && firstPlayerTurn.data}\n            setUserChoice={(value) => {\n              SetFirstUserChoice({ data: value, fromLocStor: false });\n            }}\n            userChoice={firstUserChoice.data}\n            playsComputer={false}\n            choiceLose={lostPlayer.data === 1}\n            acceptKeyboardEvents={true}\n          />\n        </div>\n\n        <div>\n          <OneUserGameArea\n            userCanMakeChoice={started.data && !roundOver.data && !firstPlayerTurn.data}\n            setUserChoice={(value) => {\n              SetSecondUserChoice({ data: value, fromLocStor: false });\n            }}\n            userChoice={secondUserChoice.data}\n            playsComputer={true}\n            startMakingComputerChoice={startMakingComputerChoice.data}\n            choiceLose={lostPlayer.data === 2}\n            acceptKeyboardEvents={false}\n          />\n        </div>\n\n      </div>\n\n      <div className='game-btns-area'>\n\n        <div>\n\n        <div>\n          <button disabled={started.data && currRound.data === 1 && !roundOver.data}\n            onClick={resetGame}\n            ref={newGameBtnRef}\n            className=\"fill new-game-btn\"\n           >\n            New game\n          </button>\n\n          <button disabled={!started.data || (started.data && !roundOver.data)}\n            onClick={continueGame}\n            ref= {continueBtnRef}\n            className=\"fill\"\n           >\n            Continue\n          </button>\n        </div>\n\n        <div className=\"prompts-block\" id=\"blink\">\n          {!started.data && 'To start, press \"New game\" button or english \"n\" on keyboard'}\n          {started.data && roundOver.data && 'Press \"Continue\" (or english \"c\" on keyboard) to continue or \"New game\" (or english \"n\" on keyboard) to restart'}\n        </div>\n\n        <div className=\"slidecontainer\">\n          <input\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.02}\n            value={soundVolume.data}\n            className=\"slider\"\n            onChange={event => {\n              SetSoundVolume({ data: event.target.valueAsNumber, fromLocStor: false });\n            }}\n          />\n          { useSounds.data &&\n            <button className=\"sound-btn music-btn\"\n                    onClick={() => SetUseSounds({ data: false, fromLocStor: false })}\n            >\n            </button>\n          }\n          { !useSounds.data &&\n            <button className=\"no-sound-btn music-btn\"\n                    onClick={() => SetUseSounds({ data: true, fromLocStor: false })}\n            >\n            </button>\n          }\n          </div>\n\n        </div>\n\n        <div className=\"game-res\">\n          <button\n            className=\"fill clear-btn\"\n            onClick={() => {\n              SetLast10GameResults({ data: [], fromLocStor: false });\n            }}\n          >\n            &#10006; Clear\n          </button>\n          {`Last 10 game results: ${last10GameResults.data.join('; ')}`}\n        </div>\n\n      </div>\n\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Game } from '../src/components/Game';\n\nfunction App() {\n  const [isFullScreen, SetIsFullScreen] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('fullscreenchange', (event) => {\n      if (document.fullscreenElement) {\n        SetIsFullScreen(true);\n      } else {\n        SetIsFullScreen(false);\n      }\n    });\n  }, []);\n\n  function fullScreen(element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitrequestFullscreen) { /* Safari */\n      element.webkitRequestFullscreen();\n    } else if (element.mozRequestFullscreen) { /* IE11 */\n      element.mozRequestFullScreen();\n    }\n  }\n\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) { /* Safari */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) { /* IE11 */\n      document.msExitFullscreen();\n    }\n  }\n\n  function setFullScreen() {\n    if (!isFullScreen) {\n      // полноэкранный режим для всей страницы\n      var html = document.documentElement;\n      fullScreen(html);\n    } else {\n      closeFullscreen();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"Game-title-block\">\n          <div className=\"game-logo\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </div>\n          <div className=\"game-title\">\n            Rock, Scissors, Paper\n          </div>\n        </div>\n        <Game />\n        <div>\n          <button\n            className=\"fill full-scr-btn\"\n            onClick={setFullScreen}>{!isFullScreen ? 'Full Screen' : 'Exit Full Screen'}\n          </button>\n        </div>\n        <footer>\n          <div>\n            <img id=\"school-logo\" src=\"https://rs.school/images/rs_school_js.svg\" alt=\"RSSchool logo\"></img>\n          </div>\n          <div>\n            <span>https://rs.school/react/</span><br/>\n            <span>2021, Github: https://github.com/natallia-js/react-game</span>\n          </div>\n        </footer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}